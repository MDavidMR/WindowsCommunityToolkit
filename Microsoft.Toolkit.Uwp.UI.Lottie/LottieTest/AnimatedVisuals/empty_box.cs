//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Xaml.Controls;
using System;
using System.Numerics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedVisuals
{
    sealed class Empty_box : IAnimatedVisualSource
    {
        public IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            if (!IsRuntimeCompatible())
            {
                return null;
            }
            return new AnimatedVisual(compositor);
        }

        static bool IsRuntimeCompatible()
        {
            if (!Windows.Foundation.Metadata.ApiInformation.IsTypePresent("Windows.UI.Composition.CompositionGeometricClip"))
            {
                return false;
            }
            return true;
        }

        sealed class AnimatedVisual : IAnimatedVisual
        {
            const long c_durationTicks = 20000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _animatedColorBrush_AlmostGray_FF868686_to_TransparentAlmostGray_00868686;
            CompositionColorBrush _animatedColorBrush_White_to_TransparentWhite;
            CompositionColorBrush _colorBrush_AlmostLightGray_FFCCD1D9;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            LinearEasingFunction _linearEasingFunction;
            ContainerVisual _root;
            ExpressionAnimation _scalarExpressionAnimation;
            StepEasingFunction _stepThenHoldEasingFunction;

            // Path 1
            CompositionColorBrush AnimatedColorBrush_AlmostDarkGray_FF9F9F9F_to_TransparentAlmostDarkGray_009F9F9F()
            {
                var result = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x9F, 0x9F, 0x9F));
                result.StartAnimation("Color", ColorAnimation_AlmostDarkGray_FF9F9F9F_to_TransparentAlmostDarkGray_009F9F9F());
                var controller = result.TryGetAnimationController("Color");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            CompositionColorBrush AnimatedColorBrush_AlmostGray_FF868686_to_TransparentAlmostGray_00868686()
            {
                var result = _animatedColorBrush_AlmostGray_FF868686_to_TransparentAlmostGray_00868686 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x86, 0x86, 0x86));
                result.StartAnimation("Color", ColorAnimation_AlmostGray_FF868686_to_TransparentAlmostGray_00868686());
                var controller = result.TryGetAnimationController("Color");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            CompositionColorBrush AnimatedColorBrush_White_to_TransparentWhite()
            {
                var result = _animatedColorBrush_White_to_TransparentWhite = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
                result.StartAnimation("Color", ColorAnimation_White_to_TransparentWhite());
                var controller = result.TryGetAnimationController("Color");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_AlmostDarkGray_FF9F9F9F_to_TransparentAlmostDarkGray_009F9F9F()
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                // AlmostDarkGray_FF9F9F9F
                result.InsertKeyFrame(0, Color.FromArgb(0xFF, 0x9F, 0x9F, 0x9F), StepThenHoldEasingFunction());
                // AlmostDarkGray_FF9F9F9F
                result.InsertKeyFrame(0.699999988F, Color.FromArgb(0xFF, 0x9F, 0x9F, 0x9F), _linearEasingFunction);
                // TransparentAlmostDarkGray_009F9F9F
                result.InsertKeyFrame(0.980000019F, Color.FromArgb(0x00, 0x9F, 0x9F, 0x9F), CubicBezierEasingFunction_1());
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_AlmostGray_FF868686_to_TransparentAlmostGray_00868686()
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                // AlmostGray_FF868686
                result.InsertKeyFrame(0, Color.FromArgb(0xFF, 0x86, 0x86, 0x86), _stepThenHoldEasingFunction);
                // AlmostGray_FF868686
                result.InsertKeyFrame(0.699999988F, Color.FromArgb(0xFF, 0x86, 0x86, 0x86), _linearEasingFunction);
                // TransparentAlmostGray_00868686
                result.InsertKeyFrame(0.980000019F, Color.FromArgb(0x00, 0x86, 0x86, 0x86), _cubicBezierEasingFunction_1);
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_White_to_TransparentWhite()
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                // White
                result.InsertKeyFrame(0, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), _stepThenHoldEasingFunction);
                // White
                result.InsertKeyFrame(0.699999988F, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), _linearEasingFunction);
                // TransparentWhite
                result.InsertKeyFrame(0.980000019F, Color.FromArgb(0x00, 0xFF, 0xFF, 0xFF), _cubicBezierEasingFunction_1);
                return result;
            }

            // Path 1
            CompositionColorBrush ColorBrush_AlmostLavender_FFE6E9EC()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xE6, 0xE9, 0xEC));
            }

            CompositionColorBrush ColorBrush_AlmostLightGray_FFCCD1D9()
            {
                return _colorBrush_AlmostLightGray_FFCCD1D9 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xCC, 0xD1, 0xD9));
            }

            // Path 1
            CompositionColorBrush ColorBrush_AlmostWhiteSmoke_FFF4F4F4()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF4, 0xF4, 0xF4));
            }

            // Layer (Shape): ruoi
            CompositionContainerShape ContainerShape()
            {
                var result = _c.CreateContainerShape();
                var propertySet = result.Properties;
                propertySet.InsertVector2("Position", new Vector2(57.3610001F, 61.0159988F));
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_5());
                shapes.Add(SpriteShape_6());
                shapes.Add(SpriteShape_7());
                result.StartAnimation("Position", Vector2Animation());
                var controller = result.TryGetAnimationController("Position");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "my.Position - Vector2(60.531,10.945)";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("Offset", _reusableExpressionAnimation);
                return result;
            }

            // Path 1
            //   Path 1.PathGeometry
            //     TrimEnd
            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0329999998F), new Vector2(0.833000004F, 0.953000009F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0329999998F), new Vector2(0.833000004F, 0.967000008F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _c.CreateCubicBezierEasingFunction(new Vector2(0, 0), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-32.1430016F, -24.1709995F));
                    builder.AddLine(new Vector2(-32.1430016F, 11.3109999F));
                    builder.AddLine(new Vector2(-0.00100000005F, 24.1709995F));
                    builder.AddLine(new Vector2(32.144001F, 11.3109999F));
                    builder.AddLine(new Vector2(32.144001F, -24.1709995F));
                    builder.AddLine(new Vector2(-32.1430016F, -24.1709995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-16.0720005F, 24.1709995F));
                    builder.AddLine(new Vector2(16.0720005F, 11.3120003F));
                    builder.AddLine(new Vector2(16.0720005F, -24.1709995F));
                    builder.AddLine(new Vector2(-16.0720005F, -24.1709995F));
                    builder.AddLine(new Vector2(-16.0720005F, 24.1709995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12.8559999F, -23.2490005F));
                    builder.AddLine(new Vector2(0, -16.6049995F));
                    builder.AddLine(new Vector2(-12.8570004F, -23.2490005F));
                    builder.AddLine(new Vector2(-45, -6.64099979F));
                    builder.AddLine(new Vector2(-32.144001F, 0.00100000005F));
                    builder.AddLine(new Vector2(-45, 6.64499998F));
                    builder.AddLine(new Vector2(-12.8570004F, 23.2490005F));
                    builder.AddLine(new Vector2(0, 16.6089993F));
                    builder.AddLine(new Vector2(12.8559999F, 23.2490005F));
                    builder.AddLine(new Vector2(45, 6.64499998F));
                    builder.AddLine(new Vector2(32.1430016F, 0.00100000005F));
                    builder.AddLine(new Vector2(45, -6.64099979F));
                    builder.AddLine(new Vector2(12.8559999F, -23.2490005F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.00100000005F, -16.6070004F));
                    builder.AddLine(new Vector2(-32.1430016F, -0.00200000009F));
                    builder.AddLine(new Vector2(-0.00100000005F, 16.6070004F));
                    builder.AddLine(new Vector2(32.144001F, -0.00200000009F));
                    builder.AddLine(new Vector2(-0.00100000005F, -16.6070004F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-7.3829999F, 24.7600002F));
                    builder.AddCubicBezier(new Vector2(-12.0579996F, 20.632F), new Vector2(-20.9559994F, 10.8129997F), new Vector2(-7.046F, 5.53999996F));
                    builder.AddCubicBezier(new Vector2(5.76999998F, 0.681999981F), new Vector2(9.79500008F, 1.46099997F), new Vector2(14.3400002F, -2.273F));
                    builder.AddCubicBezier(new Vector2(20.9559994F, -7.71099997F), new Vector2(16.8509998F, -23.5529995F), new Vector2(-3.17799997F, -24.7600002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0, -3.61400008F));
                    builder.AddCubicBezier(new Vector2(1.99600005F, -3.61400008F), new Vector2(3.61400008F, -1.99600005F), new Vector2(3.61400008F, 0));
                    builder.AddCubicBezier(new Vector2(3.61400008F, 1.99600005F), new Vector2(1.99600005F, 3.61400008F), new Vector2(0, 3.61400008F));
                    builder.AddCubicBezier(new Vector2(-1.99600005F, 3.61400008F), new Vector2(-3.61400008F, 1.99600005F), new Vector2(-3.61400008F, 0));
                    builder.AddCubicBezier(new Vector2(-3.61400008F, -1.99600005F), new Vector2(-1.99600005F, -3.61400008F), new Vector2(0, -3.61400008F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, -2.57399988F));
                    builder.AddCubicBezier(new Vector2(1.42200005F, -2.57399988F), new Vector2(2.57399988F, -1.42200005F), new Vector2(2.57399988F, 0));
                    builder.AddCubicBezier(new Vector2(2.57399988F, 1.42200005F), new Vector2(1.42200005F, 2.57399988F), new Vector2(0.00100000005F, 2.57399988F));
                    builder.AddCubicBezier(new Vector2(-1.421F, 2.57399988F), new Vector2(-2.57399988F, 1.42200005F), new Vector2(-2.57399988F, 0));
                    builder.AddCubicBezier(new Vector2(-2.57399988F, -1.42200005F), new Vector2(-1.421F, -2.57399988F), new Vector2(0.00100000005F, -2.57399988F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_7()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.00100000005F, -1.801F));
                    builder.AddCubicBezier(new Vector2(0.994000018F, -1.801F), new Vector2(1.801F, -0.995000005F), new Vector2(1.801F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(1.801F, 0.992999971F), new Vector2(0.994000018F, 1.801F), new Vector2(-0.00100000005F, 1.801F));
                    builder.AddCubicBezier(new Vector2(-0.995000005F, 1.801F), new Vector2(-1.801F, 0.992999971F), new Vector2(-1.801F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(-1.801F, -0.995000005F), new Vector2(-0.995000005F, -1.801F), new Vector2(-0.00100000005F, -1.801F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Layer (Shape): ruoi
            //   Position
            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            LinearEasingFunction LinearEasingFunction()
            {
                return _linearEasingFunction = _c.CreateLinearEasingFunction();
            }

            // Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
                return result;
            }

            // Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
                return result;
            }

            // Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
                return result;
            }

            // Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
                return result;
            }

            // Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_4()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_4()));
                result.TrimEnd = 0;
                result.StartAnimation("TrimEnd", ScalarAnimation_0_to_1());
                var controller = result.TryGetAnimationController("TrimEnd");
                controller.Pause();
                controller.StartAnimation("Progress", ScalarExpressionAnimation());
                return result;
            }

            // Layer (Shape): ruoi
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_5()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_5()));
                return result;
            }

            // Layer (Shape): ruoi
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_6()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_6()));
                return result;
            }

            // Layer (Shape): ruoi
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_7()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_7()));
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0);
                propertySet.InsertScalar("t0", 0);
                var children = result.Children;
                children.InsertAtTop(ShapeVisual());
                result.StartAnimation("t0", ScalarAnimation_1_to_1());
                var controller = result.TryGetAnimationController("t0");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Path 1
            //   Path 1.PathGeometry
            // TrimEnd
            ScalarKeyFrameAnimation ScalarAnimation_0_to_1()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 0, LinearEasingFunction());
                result.InsertKeyFrame(0.699999988F, 1, CubicBezierEasingFunction_0());
                return result;
            }

            ScalarKeyFrameAnimation ScalarAnimation_1_to_1()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0.204379901F, 1, CubicBezierEasingFunction_2());
                result.InsertKeyFrame(0.204380006F, 0, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.388899893F, 1, CubicBezierEasingFunction_3());
                result.InsertKeyFrame(0.388899982F, 0, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.699999928F, 1, _cubicBezierEasingFunction_3);
                return result;
            }

            ExpressionAnimation ScalarExpressionAnimation()
            {
                var result = _scalarExpressionAnimation = _c.CreateExpressionAnimation();
                result.SetReferenceParameter("_", _root);
                result.Expression = "_.Progress";
                return result;
            }

            ShapeVisual ShapeVisual()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(120, 120);
                var shapes = result.Shapes;
                // Path 1
                shapes.Add(SpriteShape_0());
                // Path 1
                shapes.Add(SpriteShape_1());
                // Path 1
                shapes.Add(SpriteShape_2());
                // Path 1
                shapes.Add(SpriteShape_3());
                // Path 1
                shapes.Add(SpriteShape_4());
                // Layer (Shape): ruoi
                shapes.Add(ContainerShape());
                return result;
            }

            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 60, 83.3300018F);
                result.FillBrush = ColorBrush_AlmostLightGray_FFCCD1D9();
                result.Geometry = PathGeometry_0();
                return result;
            }

            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 76.0719986F, 83.3300018F);
                result.FillBrush = ColorBrush_AlmostLavender_FFE6E9EC();
                result.Geometry = PathGeometry_1();
                return result;
            }

            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 60, 55.7480011F);
                result.FillBrush = ColorBrush_AlmostWhiteSmoke_FFF4F4F4();
                result.Geometry = PathGeometry_2();
                return result;
            }

            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 60, 55.75F);
                result.FillBrush = _colorBrush_AlmostLightGray_FFCCD1D9;
                result.Geometry = PathGeometry_3();
                return result;
            }

            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 67.1200027F, 36.8810005F);
                result.Geometry = PathGeometry_4();
                result.StrokeBrush = AnimatedColorBrush_AlmostDarkGray_FF9F9F9F_to_TransparentAlmostDarkGray_009F9F9F();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                var strokeDashArray = result.StrokeDashArray;
                strokeDashArray.Add(2.02800012F);
                strokeDashArray.Add(2.02800012F);
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                return result;
            }

            // Layer (Shape): ruoi
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 57.9570007F, 10.552F);
                result.FillBrush = AnimatedColorBrush_White_to_TransparentWhite();
                result.Geometry = PathGeometry_5();
                result.StrokeBrush = AnimatedColorBrush_AlmostGray_FF868686_to_TransparentAlmostGray_00868686();
                result.StrokeMiterLimit = 10;
                result.StrokeThickness = 0.699999988F;
                return result;
            }

            // Layer (Shape): ruoi
            // Path 1
            CompositionSpriteShape SpriteShape_6()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 64.1449966F, 9.60599995F);
                result.FillBrush = _animatedColorBrush_White_to_TransparentWhite;
                result.Geometry = PathGeometry_6();
                result.StrokeBrush = _animatedColorBrush_AlmostGray_FF868686_to_TransparentAlmostGray_00868686;
                result.StrokeMiterLimit = 10;
                result.StrokeThickness = 0.699999988F;
                return result;
            }

            // Layer (Shape): ruoi
            // Path 1
            CompositionSpriteShape SpriteShape_7()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 62.4000015F, 13.1440001F);
                result.FillBrush = _animatedColorBrush_AlmostGray_FF868686_to_TransparentAlmostGray_00868686;
                result.Geometry = PathGeometry_7();
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Layer (Shape): ruoi
            // Position
            Vector2KeyFrameAnimation Vector2Animation()
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.SetReferenceParameter("_", _root);
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, new Vector2(57.3610001F, 61.0159988F), HoldThenStepEasingFunction());
                result.InsertExpressionKeyFrame(0.204379901F, "(Pow(1 - _.t0, 3) * Vector2(57.361,61.016)) + (3 * Square(1 - _.t0) * _.t0 * Vector2(52.686,56.88799)) + (3 * (1 - _.t0) * Square(_.t0) * Vector2(43.78901,47.069)) + (Pow(_.t0, 3) * Vector2(57.699,41.796))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.388899893F, "(Pow(1 - _.t0, 3) * Vector2(57.699,41.796)) + (3 * Square(1 - _.t0) * _.t0 * Vector2(70.515,36.938)) + (3 * (1 - _.t0) * Square(_.t0) * Vector2(74.53902,37.716)) + (Pow(_.t0, 3) * Vector2(79.084,33.982))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.699999928F, "(Pow(1 - _.t0, 3) * Vector2(79.084,33.982)) + (3 * Square(1 - _.t0) * _.t0 * Vector2(85.70001,28.544)) + (3 * (1 - _.t0) * Square(_.t0) * Vector2(79.72001,10.328)) + (Pow(_.t0, 3) * Vector2(59.691,9.121))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.700000048F, new Vector2(59.6910019F, 9.12100029F), _stepThenHoldEasingFunction);
                return result;
            }

            internal AnimatedVisual(Compositor compositor)
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            Visual IAnimatedVisual.RootVisual => _root;
            TimeSpan IAnimatedVisual.Duration => TimeSpan.FromTicks(c_durationTicks);
            Vector2 IAnimatedVisual.Size => new Vector2(120, 120);
            void IDisposable.Dispose() => _root?.Dispose();
        }
    }
}
