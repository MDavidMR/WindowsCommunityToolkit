<Page
    x:Class="LottieViewer.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:LottieViewer"
    xmlns:lottie="using:Lottie"
    xmlns:compositions="using:Compositions"
    mc:Ignorable="d" Visibility="Visible" RequestedTheme="Default">
    <Page.Resources>
        <lottie:LottieCompositionSource x:Key="LottieLogo" UriSource="ms-appx:///Assets/LottieLogo1.json"/>
        <local:VisiblityConverter x:Key="VisibilityConverter"/>
        <local:LottieCompositionDiagnosticsFormatter x:Key="formatter"/>
        <SolidColorBrush x:Key="ArtboardBrush" Color="White"/>
    </Page.Resources>

    <RelativePanel AllowDrop="True" 
                   DragEnter="LottieDragEnterHandler"
                   DragLeave="LottieDragLeaveHandler"
                   Drop="LottieDropHandler" 
                   Background="{StaticResource StageBackgroundBrush}">
        <Grid x:Name="TopControls" Height="60"
              Background="{StaticResource BackgroundBrush}"
              RelativePanel.AlignTopWithPanel="True"
              RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True"
              >
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <!-- Open file -->
                <Button Style="{StaticResource ControlsButtonStyle}" Click="PickFile_Click" 
                        ToolTipService.ToolTip="Pick a Lottie file"
                        >&#xf12b;</Button>

                <!-- Paint palette -->
                <Button Style="{StaticResource ControlsButtonStyle}"
                        IsEnabled="{x:Bind _stage.Player.IsCompositionLoaded, Mode=OneWay}"
                        ToolTipService.ToolTip="Background color"
                        >
                    <Button.Flyout>
                        <Flyout FlyoutPresenterStyle="{StaticResource AcrylicFlyoutPresenter}">
                            <ColorPicker
                                Background="Transparent"
                                     ColorSpectrumShape="Ring"
                                     IsColorPreviewVisible="True"
                                     IsColorChannelTextInputVisible="False"
                                     IsHexInputVisible="True"
                                     Color="{Binding Source={StaticResource ArtboardBrush}, Path=Color, Mode=TwoWay}" 
                                        IsColorSpectrumVisible="True" 
                                        IsColorSliderVisible="True" 
                                        ColorSpectrumComponents="HueSaturation"  />
                        </Flyout>
                    </Button.Flyout>
                    &#xe790;
                </Button>

            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Style="{StaticResource ControlsButtonStyle}" 
                    IsEnabled="{x:Bind _stage.Player.IsCompositionLoaded, Mode=OneWay}"
                    ToolTipService.ToolTip="Save Lottie as code"
                    Click="SaveFile_Click" >&#xe792;</Button>

            </StackPanel>

        </Grid>
        <!-- The stage. This is where the Lotties are displayed. -->
        <Border Background="{StaticResource StageBackgroundBrush}" 
              RelativePanel.RightOf="PlayerControls"  RelativePanel.AlignRightWithPanel="True"
              RelativePanel.Below="TopControls" RelativePanel.Above="Controls">

            <local:Stage x:Name="_stage" ArtboardColor="{Binding Source={StaticResource ArtboardBrush}, Path=Color}" />
        </Border>

        <StackPanel x:Name="PlayerControls" 
                    Width="340"
                    RelativePanel.AlignLeftWithPanel="True" 
                    RelativePanel.AlignTopWithPanel="True" 
                    RelativePanel.Above="Controls"
                    VerticalAlignment="Bottom"
                    Padding="5"
                    Visibility="Collapsed"
                    Background="{StaticResource ToolsBackgroundBrush}"
                    >
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Background" Value="LightGray"/>
                </Style>
                <Style TargetType="ToggleSwitch">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Background" Value="LightGray"/>
                </Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Background" Value="LightGray"/>
                </Style>
                <Style TargetType="Slider">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Background" Value="LightGray"/>
                </Style>
            </StackPanel.Resources>

        </StackPanel>

        
        <!-- Controls at the bottom of the window -->
        <Grid x:Name="Controls" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
              Height="64"
              Background="{Binding Source={StaticResource BackgroundBrush}}" >
            <Grid.ColumnDefinitions>
                <!-- Buttons for opening a file, selecting background .-->
                <ColumnDefinition MinWidth="80" Width="1*"></ColumnDefinition>
                <ColumnDefinition MinWidth="200" Width="3*"></ColumnDefinition>
                <ColumnDefinition MinWidth="80" Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <!--<RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>-->
            </Grid.RowDefinitions>
            <!--<MediaTransportControls Grid.Row="1" Grid.ColumnSpan="3"/>
            <MediaPlayerElement Grid.Row="2" Grid.ColumnSpan="3"/>-->
            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" Opacity="0">
                <StackPanel.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource ControlsTextBlockStyle}" >
                        <Setter Property="Padding" Value="30,0,30,0"/>
                    </Style>
                </StackPanel.Resources>

                <!-- Open file -->
                <Button Style="{StaticResource ControlsButtonStyle}" Click="PickFile_Click"
                        ToolTipService.ToolTip="Pick a Lottie file"
                        >&#xf12b;</Button>
                <!-- Open folder -->
                <!--<TextBlock>&#xe8da;</TextBlock>-->
                <!--<TextBlock>&#xe8e5;</TextBlock>-->

                <!-- Paint palette -->
                <Button Style="{StaticResource ControlsButtonStyle}"
                        IsEnabled="{x:Bind _stage.Player.IsCompositionLoaded, Mode=OneWay}"
                        ToolTipService.ToolTip="Background color"
                        >
                    <Button.Flyout>
                        <Flyout FlyoutPresenterStyle="{StaticResource AcrylicFlyoutPresenter}">
                            <ColorPicker
                                Background="Transparent"
                                     ColorSpectrumShape="Ring"
                                     IsColorPreviewVisible="True"
                                     IsColorChannelTextInputVisible="False"
                                     IsHexInputVisible="True"
                                     Color="{Binding Source={StaticResource ArtboardBrush}, Path=Color, Mode=TwoWay}" 
                                        IsColorSpectrumVisible="True" 
                                        IsColorSliderVisible="True" 
                                        ColorSpectrumComponents="HueSaturation"  />
                        </Flyout>
                    </Button.Flyout>
                    &#xe790;
                </Button>
            </StackPanel>

            <RelativePanel Grid.Column="1" >

                <!-- Play/stop button -->
                <ToggleButton x:Name="_playStopButton" Style="{StaticResource ControlsToggleButtonStyle}"
                              RelativePanel.AlignLeftWithPanel="True"
                              RelativePanel.AlignTopWithPanel="True"
                              RelativePanel.AlignBottomWithPanel="True"
                              Checked="_playControl_Toggled"
                              Unchecked="_playControl_Toggled"
                              IsEnabled="{x:Bind _stage.Player.IsCompositionLoaded, Mode=OneWay}"
                              ToolTipService.ToolTip="Play/Stop"
                              >
                    <Grid>
                        <!-- Play -->
                        <TextBlock Visibility="{x:Bind _playStopButton.IsChecked, Converter={StaticResource VisibilityConverter}, ConverterParameter=not, Mode=OneWay}">&#xedb5;</TextBlock>
                        <!-- Stop -->
                        <TextBlock Visibility="{x:Bind _playStopButton.IsChecked, Converter={StaticResource VisibilityConverter}, Mode=OneWay}" Height="34" VerticalAlignment="Bottom">&#xe71a;</TextBlock>
                    </Grid>
                </ToggleButton>

                <!-- Scrubber -->
                <!--IsEnabled="{x:Bind _playStopButton.IsChecked, Mode=OneWay}"-->
                <local:Scrubber x:Name="_scrubber" ValueChanged="ProgressSliderChanged"
                        IsEnabled="{x:Bind _stage.Player.IsCompositionLoaded, Mode=OneWay}"
                        RelativePanel.RightOf="_playStopButton"
                        RelativePanel.LeftOf="_loopButton"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True" />

                <!-- Loop or play again or something-->
                <!-- Currently hidden through opacity - not clear that we want a loop button -->
                <ToggleButton x:Name="_loopButton" Style="{StaticResource ControlsToggleButtonStyle}" 
                        Opacity="0"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True">
                    <Grid>
                        <!-- Play to end -->
                        <TextBlock Visibility="{x:Bind _loopButton.IsChecked, Converter={StaticResource VisibilityConverter}, ConverterParameter=not, Mode=OneWay}">&#xe9ac;</TextBlock>
                        <!-- Repeat -->
                        <TextBlock Visibility="{x:Bind _loopButton.IsChecked, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">&#xe8ee;</TextBlock>
                    </Grid>
                </ToggleButton>

            </RelativePanel>

            <!-- Status indicators and buttons for saving content -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Opacity="0">
                <StackPanel.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource ControlsTextBlockStyle}" >
                        <Setter Property="Padding" Value="20,0,20,0"/>
                    </Style>
                </StackPanel.Resources>

                <!-- Flag -->
                <!--
                <TextBlock Grid.Column="5">&#xe7c1;</TextBlock>-->
                <!-- Bang -->
                <!--<TextBlock Grid.Column="6" Foreground="Orange" >&#xe8c9;</TextBlock>-->
                <!-- Wrench: &#xe90f;-->
                <TextBlock Visibility="{Binding ElementName=_stage, Path=Player.Diagnostics, Converter={StaticResource formatter}, ConverterParameter=VisibleIfIssues}" Foreground="Orange" >&#xe7ba;</TextBlock>
                <!-- Save as -->
                <Button Style="{StaticResource ControlsButtonStyle}"  
                    IsEnabled="{x:Bind _stage.Player.IsCompositionLoaded, Mode=OneWay}"
                    ToolTipService.ToolTip="Save Lottie as code"
                    Click="SaveFile_Click" >&#xe792;</Button>

            </StackPanel>

        </Grid>
    </RelativePanel>
</Page>
